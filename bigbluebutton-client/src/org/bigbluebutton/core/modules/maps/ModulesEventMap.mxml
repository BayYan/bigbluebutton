<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<EventMap xmlns="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">
  <mx:Script>
    <![CDATA[
      import mx.events.FlexEvent;
      
      import org.bigbluebutton.core.config.model.ConfigModel;
      import org.bigbluebutton.core.modules.events.ModuleLoadEvent;
      import org.bigbluebutton.core.modules.model.ModulesModel;
      import org.bigbluebutton.core.modules.services.ModuleLoaderService;
      import org.bigbluebutton.core.user.events.UserEvent;
      import org.bigbluebutton.main.events.SuccessfulLoginEvent;
    ]]>
  </mx:Script>

  <EventHandlers type="{FlexEvent.PREINITIALIZE}">
    <!--
    The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
    -->
    <ObjectBuilder generator="{ModulesModel}" cache="global" />
    <ObjectBuilder generator="{ModuleLoaderService}" cache="global" />
  </EventHandlers>
  
  <EventHandlers type="{SuccessfulLoginEvent.USER_LOGGED_IN}" >
    <ObjectBuilder generator="{ModulesModel}" cache="global" />
    <ObjectBuilder generator="{ModuleLoaderService}" cache="global" />
    <MethodInvoker generator="{ModuleLoaderService}" method="loadAllModules"/>
  </EventHandlers>

  <EventHandlers type="{ModuleLoadEvent.MODULE_LOAD_SUCCESS}" >
    <MethodInvoker generator="{ModuleLoaderService}" method="moduleLoadedSuccessHandler" arguments="{event}"/>
  </EventHandlers>

  <EventHandlers type="{UserEvent.USERS_ADDED}" >
    <MethodInvoker generator="{ModuleLoaderService}" method="startAllModules"/>
  </EventHandlers>
  
  <!-- Injectors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->  
  <Injectors target="{ ModulesModel }">
    <PropertyInjector targetKey="configModel" source="{ ConfigModel }"/>
    <PropertyInjector targetKey="dispatcher" source="{ scope.dispatcher }"/>
  </Injectors>
  
  <Injectors target="{ ModuleLoaderService }">
    <PropertyInjector targetKey="dispatcher" source="{ scope.dispatcher }"/>
    <PropertyInjector targetKey="modulesModel" source="{ ModulesModel }"/>
  </Injectors>
	
	<mx:Script>
	<![CDATA[

	]]>
	</mx:Script>
		
</EventMap>
