<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<EventMap xmlns="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">
  <mx:Script>
    <![CDATA[
      import org.bigbluebutton.common.events.OpenWindowEvent;
      import org.bigbluebutton.core.layout.model.LayoutModel;
      import org.bigbluebutton.core.user.model.MeetingModel;
      import org.bigbluebutton.main.events.AppVersionEvent;
      import org.bigbluebutton.main.events.LogWindowEvent;
      import org.bigbluebutton.main.views.MainApplicationShell;
      import org.bigbluebutton.main.views.MainDisplay;
      import org.bigbluebutton.main.views.MainFooterBar;
      import org.bigbluebutton.main.views.layout.LayoutManager;
      import org.bigbluebutton.main.views.model.vos.MainApplicationShellModel;
      import org.bigbluebutton.main.views.model.vos.MainFooterBarModel;      
    ]]>
  </mx:Script>

  <EventHandlers type="{AppVersionEvent.APP_VERSION_EVENT}">
    <ObjectBuilder generator="{MainApplicationShellModel}" cache="global"/>
    <MethodInvoker generator="{MainApplicationShellModel}" cache="global" method="switchToJoinedState" />
    <MethodInvoker generator="{MainAppShellMediator}" cache="global" method="displayDefaultLayout" />
  </EventHandlers>

  <EventHandlers type="{OpenWindowEvent.OPEN_WINDOW_EVENT}">
    <MethodInvoker generator="{MainAppShellMediator}" cache="global" method="openWindowEventHandler" arguments="{event}"/>
  </EventHandlers>
  
  <!-- ====================== Injectors ========================== -->  
  <Injectors target="{ MainFooterBar }">
    <PropertyInjector targetKey="model" source="{ MainFooterBarModel }"/>
    <PropertyInjector targetKey="dispatcher" source="{ scope.dispatcher }"/>
  </Injectors>

  <Injectors target="{ MainApplicationShell }">   
    <PropertyInjector targetKey="model" source="{ MainApplicationShellModel }"/>
  </Injectors>
 
  <Injectors target="{ MainDisplay }">
    <PropertyInjector targetKey="layoutManager" source="{ LayoutManager }"/>
    <ListenerInjector eventType="{LogWindowEvent.OPEN_LOG_WINDOW}" method="openLogWindow"/>
    <ListenerInjector eventType="{OpenWindowEvent.OPEN_WINDOW_EVENT}" method="openWindowEventHandler"/>                   
  </Injectors>
 
  <Injectors target="{ LayoutManager }">   
    <PropertyInjector targetKey="meetingModel" source="{ MeetingModel }"/>
    <PropertyInjector targetKey="layoutModel" source="{ LayoutModel }"/>
    <PropertyInjector targetKey="dispatcher" source="{ scope.dispatcher }"/>
  </Injectors>
  
</EventMap>
