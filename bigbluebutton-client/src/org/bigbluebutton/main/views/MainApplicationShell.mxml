<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
		xmlns:flexmdi="flexlib.mdi.containers.*"
		xmlns:logModule="org.bigbluebutton.modules.log.view.components.*"
		xmlns:views="org.bigbluebutton.main.views.*"
		xmlns:mate="http://mate.asfusion.com/"
		xmlns:maps="org.bigbluebutton.main.maps.*"
		xmlns:api="org.bigbluebutton.main.api.*"
    xmlns:common="org.bigbluebutton.common.*" 
    xmlns:layout="org.bigbluebutton.main.views.layout.*"
		width="100%" height="100%" creationComplete="onCreationComplete()">
		

	<mx:Script>
		<![CDATA[
      import mx.controls.Alert;

      public function onCreationComplete():void {
        Alert.show("Shell created");
        currentState = 'LoadingState';
      }
      

/*			
			private function openLogWindow():void {
				if (logWindow == null){
					logWindow = new LogWindow();
					logWindow.logs = logs;
				}
				mdiCanvas.windowManager.add(logWindow);
				mdiCanvas.windowManager.absPos(logWindow, 50, 50);
				logWindow.width = mdiCanvas.width - 100;
				logWindow.height = mdiCanvas.height - 100;
			}
			
			public function openShortcutHelpWindow(e:Event = null):void{
				if (scWindow == null) {
					scWindow = new ShortcutHelpWindow();
				}
				mdiCanvas.windowManager.add(scWindow);
				mdiCanvas.windowManager.absPos(scWindow, mdiCanvas.width/2 - 150, mdiCanvas.height/2 - 150);
				scWindow.width = 300;
				scWindow.height = 300;
				scWindow.focusCategories();
			}
				   		
	   		private function handleOpenWindowEvent(event:OpenWindowEvent):void {
	   			
	   			var window:IBbbModuleWindow = event.window;
	   			mdiCanvas.addWindow(window);
	   		}
	   		
	   		private function handleCloseWindowEvent(event:CloseWindowEvent):void {
	   			var window:IBbbModuleWindow = event.window;
				mdiCanvas.removeWindow(window);
	   		}
	   		
	   		private function resetLayout():void{
	   			mdiCanvas.resetWindowLayout();
	   		}
	   		
	   		private function addComponentToCanvas(e:AddUIComponentToMainCanvas):void{
	   			mdiCanvas.addChild(e.component);
	   		}
	*/   		

								
		]]>
	</mx:Script>
<!--	
  <mx:states>
    <mx:State name="JoinedState">
      <mx:AddChild>
        <mx:Button label="Bar"/>		
      </mx:AddChild>
    </mx:State>
    <mx:State name="LoadingState">
      <mx:AddChild>
        <mx:Button id="fooBtn" label="Foo" click="currentState = 'JoinedState' "/>
      </mx:AddChild>
    </mx:State>    
  </mx:states> 
-->
  <mx:states>
    <mx:State name="JoinedState">
      <mx:RemoveChild target="progressBar"/>
      <mx:RemoveChild target="brandingLogo"/>
      <mx:AddChild>
        <views:MainToolbar/>
      </mx:AddChild>
      <mx:AddChild>
        <views:MainCanvas width="100%" height="100%"/>	
      </mx:AddChild>
      <mx:AddChild>
        <views:MainFooterBar />	
      </mx:AddChild>
    </mx:State>
    <mx:State name="LoadingState">
      <mx:AddChild>
        <mx:Button label="Foo" click="currentState='JoinedState'"/>
      </mx:AddChild>
      <mx:AddChild>
        <mx:ProgressBar id="progressBar" visible="true" x="{this.width/2 - progressBar.width/2}" y="{this.height/2 - progressBar.height/2}" width="{this.width/2}" />
      </mx:AddChild>
      <mx:AddChild>
        <views:BrandingLogo id="brandingLogo" x="{this.width - 300}" y="{this.height - 300}" />
      </mx:AddChild>
        
    </mx:State>    
  </mx:states> 

  <!--
  
  <views:LoadingBar id="progressBar" visible="true" x="{this.width/2 - progressBar.width/2}" y="{this.height/2 - progressBar.height/2}" width="{this.width/2}" />        
  <views:BrandingLogo id="brandingLogo" x="{this.width - 300}" y="{this.height - 300}" />	
  -->	
</mx:VBox>
